// Aim of the program: Write a program to implement Binary Search to give the position of 
//leftmost appearance of the element in the array being searched. Display the number of 
//comparisons made while searching. 
#include<stdio.h>
#include<stdlib.h>
int binarySearch(int p[],int n,int key,int *comparison){
    int l=0;
    int r=n-1;
    int index=-1;
    while(l<=r){
    int mid=(l+r)/2;
    (*comparison)++;
    if(key==p[mid]){
    index=mid;
    r=mid-1;
    }

    else if(key<p[mid]){
          r=mid-1;
    }
    else 
    if(key>p[mid]){
        l=mid+1;
    }
    }
    return index;
    

}
int main(){
    int n;
    int *p;
    int comparison=0;
    p=(int *)malloc(n*sizeof(int));
    printf("enter the number of elements in an array\n");
    scanf("%d",&n);
    printf("enter the elements\n");
    for(int i=0;i<n;i++){
        scanf("%d",&p[i]);
    }
    int key;
    printf("enter the element to be searched\n");
    scanf("%d",&key);
    int index=binarySearch(p,n,key,&comparison);
    if(index==-1){
        printf("the element not present in the array\n");
    }
    else printf("the index of the key element is %d",index);
    printf("the number of comparisons are %d",comparison);
}
